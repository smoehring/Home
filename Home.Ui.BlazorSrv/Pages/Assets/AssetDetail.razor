@page "/Asset/{Uuid:guid?}"
@page "/Asset/New"
@using Smoehring.Home.Ui.BlazorSrv.Const
@using Smoehring.Home.Data.SqlDatabase.Const
@using System.Globalization

<EditForm EditContext="_editContext" OnSubmit="EditForm_OnSubmit" Context="EditFormContext">
<fieldset disabled="@_isWorking">
<MudPaper Class="pa-3">
    <MudStack>
        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h5">Asset</MudText>
            </MudItem>
            <MudItem xs="2">
                <MudField Label="Id">@_currentAsset.Id</MudField>
            </MudItem>
            <MudItem xs="4">
                <MudField Label="Uuid">@_currentAsset.Uuid</MudField>
            </MudItem>
            <MudItem xs="4">
                <MudField Label="Creation Timestamp">@_currentAsset.Creation</MudField>
            </MudItem>
            <MudItem xs="2">
                @switch (_mode)
                {
                    case AssetDetailMode.Show:
                        <MudAlert Severity="Severity.Info" Icon="@Icons.Material.Outlined.RemoveRedEye">Showing</MudAlert>
                        break;
                    case AssetDetailMode.Edit:
                        <MudAlert Severity="Severity.Warning" Icon="@Icons.Material.Outlined.ModeEdit">Editing</MudAlert>
                        break;
                    case AssetDetailMode.Create:
                        <MudAlert Severity="Severity.Success" Icon="@Icons.Material.Outlined.AddBox">Creating</MudAlert>
                        break;
                    default:
                        throw new ArgumentOutOfRangeException();
                }
            </MudItem>
            <MudItem xs="9">
                <MudTextField T="string" Label="Name" @bind-Value="_currentAsset.Name"></MudTextField>
            </MudItem>
            <MudItem xs="3">
                <MudSelect T="int" Label="State" @bind-Value="_currentAsset.AssetStateId">
                    @foreach (var state in UserCache.AssetStates)
                    {
                        <MudSelectItem Value="@state.Id">@state.Name</MudSelectItem>
                    }
                </MudSelect>
            </MudItem>
            <MudItem xs="6">
                <MudAutocomplete T="string" Label="Brand" @bind-Value="_currentBrand" CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" SearchFuncWithCancel="SearchBrandNames" ShowProgressIndicator="true"/>
            </MudItem>
            <MudItem xs="6">
                <MudAutocomplete T="string" Label="Brand" @bind-Value="_currentAssetType" CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" SearchFuncWithCancel="SearchAssetTypeNames" ShowProgressIndicator="true"/>
            </MudItem>
        </MudGrid>
        <MudGrid>
            @if (_currentAsset.Device != null)
            {
                <MudItem xs="12">
                    <MudDivider/>
                </MudItem>
                <MudItem xs="12">
                    <MudText Typo="Typo.h5">Device Information</MudText>
                </MudItem>
                <MudItem xs="6">
                    <MudTextField T="string?" @bind-Value="_currentAsset.Device.SerialNumber" Label="Serial-Number"/>
                </MudItem>
                <MudItem xs="6">
                    <MudTextField T="string?" @bind-Value="_currentAsset.Device.ModelNumber" Label="Model-number"/>
                </MudItem>
                <MudItem xs="12">
                    <MudTextField T="string?" @bind-Value="_currentAsset.Device.Description" Label="Description" Lines="5"/>
                </MudItem>
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="RemoveDeviceInformation_OnClick">Remove Device Information</MudButton>
                </MudItem>
            }
            else
            {
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddDeviceInformation_OnCLick">Add Device Information</MudButton>
                </MudItem>
            }
        </MudGrid>
        <MudGrid>
            @if (_currentAsset.Purchase != null)
            {
                <MudItem xs="12">
                    <MudDivider/>
                </MudItem>
                <MudItem xs="12">
                    <MudText Typo="Typo.h5">Purchase Information</MudText>
                </MudItem>
                <MudItem xs="4">
                    <MudNumericField T="decimal" @bind-Value="_currentAsset.Purchase.Amount" Label="Amount" Format="N2"/>
                </MudItem>
                <MudItem xs="4">
                    <MudSelect T="int" @bind-Value="_currentAsset.Purchase.CurrencyId" Label="Currency">
                        @foreach (var currency in UserCache.Currencies)
                        {
                            <MudSelectItem Value="@currency.Id">@($"{currency.Name} ({currency.Code})")</MudSelectItem>
                        }
                    </MudSelect>
                </MudItem>
                <MudItem xs="4">
                    <MudTextField T="DateTime" Format="yyyy-MM-dd" InputType="InputType.Date" @bind-Value="_currentAsset.Purchase.PurchaseTime" Label="Date"/>
                </MudItem>
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="RemovePurchaseInformation_OnCLick">Remove Purchase Information</MudButton>
                </MudItem>
            }
            else
            {
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddPurchaseInformation_OnCLick">Add Purchase Information</MudButton>
                </MudItem>
            }
        </MudGrid>
        <MudGrid>
            @if (_currentAsset.Media != null)
            {
                <MudItem xs="12">
                    <MudDivider/>
                </MudItem>
                <MudItem xs="12">
                    <MudText Typo="Typo.h5">Media Information</MudText>
                </MudItem>
                <MudItem xs="9">
                    <MudAutocomplete T="string" Label="Group" @bind-Value="_currentMediaGroup" CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" SearchFuncWithCancel="SearchMediaGroupNames" ShowProgressIndicator="true"></MudAutocomplete>
                </MudItem>
                <MudItem xs="3">
                    <MudNumericField T="int?" Label="Order" @bind-Value="_currentAsset.Media.GroupOrder" />
                </MudItem>
                <MudItem xs="12">
                    <MudTable Items="_currentAsset.Media.MediaNames" Elevation="0" T="MediaName" Class="mb-3">
                        <ToolBarContent>
                            <MudText Typo="Typo.h6">Alternative Names</MudText>
                        </ToolBarContent>
                        <RowTemplate>
                            <MudTd>@context.Name</MudTd>
                            <MudTd>@context.Language.DisplayName</MudTd>
                            <MudTd><MudButton StartIcon="@Icons.Material.Filled.Remove" Color="Color.Warning" OnClick="@(() => RemoveMediaName_OnClick(context))"/> </MudTd>
                        </RowTemplate>
                        <FooterContent>
                            <MudTh><MudTextField T="string" @bind-Value="_tempMediaName.Name"/></MudTh>
                            <MudTh>
                                <MudSelect T="int" @bind-Value="_tempMediaName.LanguageId">
                                    @foreach (var lang in UserCache.Languages)
                                    {
                                        <MudSelectItem Value="@lang.Id">@lang.DisplayName</MudSelectItem>
                                    }
                                </MudSelect></MudTh>
                            <MudTh><MudButton StartIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" OnClick="@(AddMediaName_OnClick)"/></MudTh>
                        </footerContent>
                    </MudTable>
                </MudItem>
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="RemoveMediaInformation_OnCLick">Remove Media Information</MudButton>
                </MudItem>
            }
            else
            {
                <MudItem xs="12">
                    <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddMediaInformation_OnCLick">Add Media Information</MudButton>
                </MudItem>
            }
        </MudGrid>
    <MudGrid>
        @if (_currentAsset.Artwork != null)
        {
            <MudItem xs="12">
                <MudDivider/>
            </MudItem>
            <MudItem xs="12">
                <MudText Typo="Typo.h5">Artwork Information</MudText>
            </MudItem>
            <MudItem xs="3">
                <MudStack>
                <MudText Typo="Typo.h6">General Information</MudText>
                    <MudSelect T="ArtworkStages" @bind-Value="_currentAsset.Artwork.Stage" Label="Stage">
                        @foreach (var stage in Enum.GetValues<ArtworkStages>())
                        {
                            <MudSelectItem Value="@stage">@Enum.GetName(stage)</MudSelectItem>
                        }
                    </MudSelect>
                    <MudSwitch T="bool" @bind-Checked="_currentAsset.Artwork.IsAdult" Label="NSFW" Color="Color.Error" />
                </MudStack>
            </MudItem>
            <MudItem xs="3">
                <MudTable T="ArtworkArtist" Items="_currentAsset.Artwork.Artists" Elevation="0" Class="mb-3 with-label" Dense="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Artists</MudText>
                    </ToolBarContent>
                    <RowTemplate>
                        <MudTd>@(context.Names.FirstOrDefault()?.Name ?? "NoName!")</MudTd>
                        <MudTd><MudButton StartIcon="@Icons.Material.Filled.Remove" Color="Color.Warning" OnClick="@(() => RemoveArtistName_OnClick(context))"/> </MudTd>
                    </RowTemplate>
                    <NoRecordsContent>
                        <MudTd colspan="2"><MudText Typo="Typo.caption">No Artist</MudText></MudTd>
                    </NoRecordsContent>
                    <FooterContent>
                        <MudTd><MudAutocomplete T="string" @bind-Value="_tempArtistName" CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" SearchFuncWithCancel="SearchArtistNames" ShowProgressIndicator="true"></MudAutocomplete></MudTd>
                        <MudTd><MudButton StartIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" OnClick="@(AddArtistName_OnClick)"/></MudTd>
                    </FooterContent>
                </MudTable>
            </MudItem>
            <MudItem xs="3">
                <MudTable T="ArtworkCharacter" Items="_currentAsset.Artwork.Characters" Elevation="0" Class="mb-3 with-label" Dense="true">
                    <ToolBarContent>
                        <MudText Typo="Typo.h6">Characters</MudText>
                    </ToolBarContent>
                    <RowTemplate>
                        <MudTd>@context.Name</MudTd>
                        <MudTd><MudButton StartIcon="@Icons.Material.Filled.Remove" Color="Color.Warning" OnClick="@(() => RemoveCharacter_OnClick(context.Id))"/> </MudTd>
                    </RowTemplate>
                    <NoRecordsContent>
                        <MudTd colspan="2"><MudText Typo="Typo.caption">No Character</MudText></MudTd>
                    </NoRecordsContent>
                    <FooterContent>
                        <MudTd><MudAutocomplete T="string" @bind-Value="_tempCharacterName" CoerceValue="true" AdornmentIcon="@Icons.Material.Filled.Search" AdornmentColor="Color.Primary" SearchFuncWithCancel="SearchCharacterNames" ShowProgressIndicator="true"></MudAutocomplete></MudTd>
                        <MudTd><MudButton StartIcon="@Icons.Material.Filled.Add" Color="Color.Secondary" OnClick="@(AddCharacterName_OnClick)"/></MudTd>
                    </FooterContent>
                </MudTable>
            </MudItem>
            <MudItem xs="3">
                @* Artwork Set here *@
            </MudItem>
            <MudItem xs="12">
                <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="RemoveArtworkInformation_OnCLick">Remove Artwork Information</MudButton>
            </MudItem>
        }
        else
        {
            <MudItem xs="12">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddArtworkInformation_OnCLick">Add Artwork Information</MudButton>
            </MudItem>
        }
    </MudGrid>
    <MudGrid>
        @if (_currentAsset.Files != null)
        {
            <MudItem xs="12">
                <MudDivider/>
            </MudItem>
            <MudItem xs="12">
                <MudText Typo="Typo.h5">Files</MudText>
            </MudItem>
            <MudItem xs="12">
            <MudStack Style="Width: 100%">
            <MudFileUpload T="IReadOnlyList<IBrowserFile>" OnFilesChanged="OnInputFilesChanged" AppendMultipleFiles Hidden="false" Class="flex-1" InputClass="absolute mud-width-full mud-height-full overflow-hidden z-20" InputStyle="opacity:0" @ondragenter="@SetDragClass" @ondragleave="@ClearDragClass" @ondragend="@ClearDragClass" Disabled="@(_currentAsset.Id <= 0)">
                <ButtonTemplate Context="ButtonContext">
                    <MudPaper Height="150px" Outlined="true" Class="@FileDragClass">
                        <MudText Typo="Typo.h6">Drag or click to add Files </MudText>
                        @if (_tempBrowserFiles != null)
                        {
                            foreach (var file in _tempBrowserFiles.Select(file => file.Name))
                            {
                                <MudChip Color="Color.Dark" Text="@file"/>
                            }
                        }
                    </MudPaper>
                </ButtonTemplate>
            </MudFileUpload>
            <MudToolBar DisableGutters="true" Class="gap-4">
                <MudButton OnClick="UploadFiles" Disabled="@(_currentAsset.Id <= 0 || _tempBrowserFiles == null || !_tempBrowserFiles.Any())" Color="Color.Primary" Variant="Variant.Filled">Upload</MudButton>
                <MudButton OnClick="ClearFiles" Disabled="@(_currentAsset.Id <= 0 || _tempBrowserFiles == null || !_tempBrowserFiles.Any())" Color="Color.Error" Variant="Variant.Filled">Clear</MudButton>
            </MudToolBar>
        </MudStack>
        <MudTable Items="@_currentAsset.Files" T="AssetFile" FixedHeader="true" RowsPerPage="10" Height="400px" Class="mb-3">
            <HeaderContent>
                <MudTh>Original Name</MudTh>
                <MudTh>Type</MudTh>
                <MudTh>Size</MudTh>
                <MudTh>Link</MudTh>
            </HeaderContent>
            <RowTemplate>
                <MudTd>@context.OriginalFileName</MudTd>
                <MudTd>@context.ContentType</MudTd>
                <MudTd>@context.Size</MudTd>
                <MudTd><a href="@($"{_fileStorageBaseUrl}/{context.StorageFileName}")" target="_blank">@context.StorageFileName</a></MudTd>
            </RowTemplate>
        </MudTable>
            </MudItem>
        }
        else
        {
            <MudItem xs="12">
                <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="AddFileInformation_OnCLick">Add Files</MudButton>
            </MudItem>
        }
    </MudGrid>
    <MudGrid>
        <MudItem xs="12">
            <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary">Save</MudButton>
            <MudButton Variant="Variant.Filled" Color="Color.Secondary" OnClick="CreateNew" Disabled="@(_mode == AssetDetailMode.Create)">New</MudButton>
        </MudItem>
    </MudGrid>
    </MudStack>
</MudPaper>
</fieldset>
</EditForm>
