// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Smoehring.Home.Data.SqlDatabase;

#nullable disable

namespace Smoehring.Home.Data.SqlDatabase.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20230310233345_AddedAssetManagementPOC")]
    partial class AddedAssetManagementPOC
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTimeOffset>("Creation")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(GetDate())");

                    b.Property<int?>("DeviceId")
                        .HasColumnType("int");

                    b.Property<int?>("MediaId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("PurchaseId")
                        .HasColumnType("int");

                    b.Property<Guid>("Uuid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("(NewId())");

                    b.HasKey("Id");

                    b.HasAlternateKey("Uuid");

                    b.HasIndex("DeviceId")
                        .IsUnique()
                        .HasFilter("[DeviceId] IS NOT NULL");

                    b.HasIndex("MediaId")
                        .IsUnique()
                        .HasFilter("[MediaId] IS NOT NULL");

                    b.HasIndex("Name");

                    b.HasIndex("PurchaseId")
                        .IsUnique()
                        .HasFilter("[PurchaseId] IS NOT NULL");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("LanguageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("LanguageId");

                    b.ToTable("Currency");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Code = "EUR",
                            LanguageId = 1,
                            Name = "Euro",
                            Symbol = "€"
                        },
                        new
                        {
                            Id = 2,
                            Code = "USD",
                            LanguageId = 2,
                            Name = "Dollars",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = 3,
                            Code = "AUD",
                            LanguageId = 4,
                            Name = "Dollars",
                            Symbol = "$"
                        },
                        new
                        {
                            Id = 4,
                            Code = "GBP",
                            LanguageId = 3,
                            Name = "Pound",
                            Symbol = "£"
                        },
                        new
                        {
                            Id = 5,
                            Code = "RUB",
                            LanguageId = 5,
                            Name = "Rubles",
                            Symbol = "₽"
                        });
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SerialNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Devices");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Language", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LanguageCultureName")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.HasKey("Id");

                    b.HasIndex("DisplayName")
                        .IsUnique();

                    b.HasIndex("LanguageCultureName")
                        .IsUnique();

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DisplayName = "German - Germany",
                            LanguageCultureName = "de-DE"
                        },
                        new
                        {
                            Id = 2,
                            DisplayName = "English - United States",
                            LanguageCultureName = "en-US"
                        },
                        new
                        {
                            Id = 3,
                            DisplayName = "English - United Kingdom",
                            LanguageCultureName = "en-GB"
                        },
                        new
                        {
                            Id = 4,
                            DisplayName = "English - Australia",
                            LanguageCultureName = "en-AU"
                        },
                        new
                        {
                            Id = 5,
                            DisplayName = "Russian - Russia",
                            LanguageCultureName = "ru-RU"
                        });
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("MediaTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MediaTypeId");

                    b.ToTable("Mediae");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Media2MediaGroup", b =>
                {
                    b.Property<int>("MediaId")
                        .HasColumnType("int");

                    b.Property<int>("GroupId")
                        .HasColumnType("int");

                    b.Property<int>("Order")
                        .HasColumnType("int");

                    b.HasKey("MediaId", "GroupId");

                    b.HasIndex("GroupId");

                    b.ToTable("Media2MediaGroup");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.MediaGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MediaGroups");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.MediaType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("MediaType");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Purchase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CurrencyId")
                        .HasColumnType("int");

                    b.Property<DateTimeOffset>("PurchaseTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetimeoffset")
                        .HasDefaultValueSql("(GetDate())");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("Purchases");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Asset", b =>
                {
                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.Device", "Device")
                        .WithOne("Asset")
                        .HasForeignKey("Smoehring.Home.Data.SqlDatabase.Models.Asset", "DeviceId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.Media", "Media")
                        .WithOne("Asset")
                        .HasForeignKey("Smoehring.Home.Data.SqlDatabase.Models.Asset", "MediaId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.Purchase", "Purchase")
                        .WithOne("Asset")
                        .HasForeignKey("Smoehring.Home.Data.SqlDatabase.Models.Asset", "PurchaseId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Device");

                    b.Navigation("Media");

                    b.Navigation("Purchase");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Currency", b =>
                {
                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.Language", "Language")
                        .WithMany("Currencies")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Language");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Media", b =>
                {
                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.MediaType", "MediaType")
                        .WithMany()
                        .HasForeignKey("MediaTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MediaType");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Media2MediaGroup", b =>
                {
                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.MediaGroup", "Group")
                        .WithMany("Mediae")
                        .HasForeignKey("GroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.Media", "Media")
                        .WithMany("Groups")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Group");

                    b.Navigation("Media");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Purchase", b =>
                {
                    b.HasOne("Smoehring.Home.Data.SqlDatabase.Models.Currency", "Currency")
                        .WithMany()
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Device", b =>
                {
                    b.Navigation("Asset")
                        .IsRequired();
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Language", b =>
                {
                    b.Navigation("Currencies");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Media", b =>
                {
                    b.Navigation("Asset")
                        .IsRequired();

                    b.Navigation("Groups");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.MediaGroup", b =>
                {
                    b.Navigation("Mediae");
                });

            modelBuilder.Entity("Smoehring.Home.Data.SqlDatabase.Models.Purchase", b =>
                {
                    b.Navigation("Asset")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
